DROP TABLE IF EXISTS genres CASCADE;
DROP TABLE IF EXISTS ratings CASCADE;
--DROP TABLE IF EXISTS films CASCADE;
--DROP TABLE IF EXISTS users CASCADE;
--DROP TABLE IF EXISTS film_genre CASCADE;
--DROP TABLE IF EXISTS likes CASCADE;
--DROP TABLE IF EXISTS friendships CASCADE;

CREATE TABLE IF NOT EXISTS genres (
    id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS ratings (
    id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS films (
    id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(200) NOT NULL,
    description VARCHAR(200),
    release_date DATE,
    duration INTEGER,
    rating_id LONG REFERENCES ratings (id)
);

CREATE TABLE IF NOT EXISTS users (
    id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR(200) NOT NULL,
    login VARCHAR(200) NOT NULL UNIQUE,
    name VARCHAR(200),
    birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genre (
    id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id LONG NOT NULL REFERENCES films (id),
    genre_id LONG NOT NULL REFERENCES genres (id)
);

CREATE TABLE IF NOT EXISTS likes (
    id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_id LONG NOT NULL REFERENCES films (id),
    user_id LONG NOT NULL REFERENCES users (id)
);

CREATE TABLE IF NOT EXISTS friendships (
    id LONG GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id1 LONG NOT NULL REFERENCES users (id),
    user_id2 LONG NOT NULL REFERENCES users (id)
);